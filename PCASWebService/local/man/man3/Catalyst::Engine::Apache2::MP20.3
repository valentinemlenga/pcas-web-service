.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Catalyst::Engine::Apache2::MP20 3"
.TH Catalyst::Engine::Apache2::MP20 3 "2010-10-04" "perl v5.8.4" "User Contributed Perl Documentation"
.SH "NAME"
Catalyst::Engine::Apache2::MP20 \- Catalyst Apache2 mod_perl 2.x Engine
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&    # Set up your Catalyst app as a mod_perl 2.x application in httpd.conf
\&    PerlSwitches -I/var/www/MyApp/lib
.Ve
.PP
.Vb 2
\&    # Preload your entire application
\&    PerlModule MyApp
.Ve
.PP
.Vb 3
\&    <VirtualHost *>
\&        ServerName    myapp.hostname.com
\&        DocumentRoot  /var/www/MyApp/root
.Ve
.PP
.Vb 4
\&        <Location />
\&            SetHandler          modperl
\&            PerlResponseHandler MyApp
\&        </Location>
.Ve
.PP
.Vb 5
\&        # you can also run your app in any non-root location
\&        <Location /some/other/path>
\&            SetHandler          perl-script
\&            PerlResponseHandler MyApp
\&        </Location>
.Ve
.PP
.Vb 4
\&        # Make sure to let Apache handle your static files
\&        # (It is not necessary to remove the Static::Simple plugin
\&        # in production; Apache will bypass Static::Simple if
\&        # configured in this way)
.Ve
.PP
.Vb 3
\&        <Location /static>
\&            SetHandler          default-handler
\&        </Location>
.Ve
.PP
.Vb 3
\&        # If not running at a root location in a VirtualHost,
\&        # you'll probably need to set an Alias to the location
\&        # of your static files, and allow access to this location:
.Ve
.PP
.Vb 7
\&        Alias /myapp/static /filesystem/path/to/MyApp/root/static
\&        <Directory /filesystem/path/to/MyApp/root/static>
\&            allow from all
\&        </Directory>
\&        <Location /myapp/static>
\&            SetHandler default-handler
\&        </Location>
.Ve
.PP
.Vb 1
\&    </VirtualHost>
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is the Catalyst engine specialized for Apache2 mod_perl version 2.x.
.SH "ModPerl::Registry"
.IX Header "ModPerl::Registry"
While this method is not recommended, you can also run your Catalyst
application via a ModPerl::Registry script.
.PP
httpd.conf:
.PP
.Vb 2
\&    PerlModule ModPerl::Registry
\&    Alias / /var/www/MyApp/script/myapp_registry.pl/
.Ve
.PP
.Vb 3
\&    <Directory /var/www/MyApp/script>
\&        Options +ExecCGI
\&    </Directory>
.Ve
.PP
.Vb 4
\&    <Location />
\&        SetHandler          perl-script
\&        PerlResponseHandler ModPerl::Registry
\&    </Location>
.Ve
.PP
script/myapp_registry.pl (you will need to create this):
.PP
.Vb 1
\&    #!/usr/bin/perl
.Ve
.PP
.Vb 3
\&    use strict;
\&    use warnings;
\&    use MyApp;
.Ve
.PP
.Vb 1
\&    MyApp->handle_request( Apache2::RequestUtil->request );
.Ve
.SH "METHODS"
.IX Header "METHODS"
.Sh "ok_constant"
.IX Subsection "ok_constant"
.SH "OVERLOADED METHODS"
.IX Header "OVERLOADED METHODS"
This class overloads some methods from \f(CW\*(C`Catalyst::Engine\*(C'\fR.
.IP "unescape_uri" 4
.IX Item "unescape_uri"
.SH "OVERLOADED METHODS"
.IX Header "OVERLOADED METHODS"
This class overloads some methods from \f(CW\*(C`Catalyst::Engine\*(C'\fR.
.IP "unescape_uri" 4
.IX Item "unescape_uri"
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Catalyst, Catalyst::Engine, Catalyst::Engine::Apache2.
.SH "AUTHORS"
.IX Header "AUTHORS"
.IP "\(bu" 4
Sebastian Riedel <sri@cpan.org>
.IP "\(bu" 4
Christian Hansen <ch@ngmedia.com>
.IP "\(bu" 4
Andy Grundman <andy@hybridized.org>
.IP "\(bu" 4
Tomas Doran <bobtfish@bobtfish.net>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2010 by The \*(L"\s-1AUTHORS\s0\*(R".
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
